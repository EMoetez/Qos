version: '3.8'

services:
  zookeeper:
    image: bitnami/zookeeper:3.9
    container_name: zookeeper
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - "2181:2181"
    networks:
      - pipeline-net

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.17.3
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - xpack.security.transport.ssl.enabled=false
    ports:
      - "9200:9200"
    volumes:
      - elastic-data:/usr/share/elasticsearch/data
    networks:
      - pipeline-net

  init-index:
    build:
      context: ./init
    depends_on:
      - elasticsearch
    networks:
      - pipeline-net

  kibana:
    image: docker.elastic.co/kibana/kibana:8.17.3
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    volumes:
      - kibana-data:/usr/share/kibana/data
    depends_on:
      - elasticsearch
    networks:
      - pipeline-net

  kibana-init:
    build:
      context: ./kibana-init
    depends_on:
      - kibana
    networks:
      - pipeline-net

  spark:
    image: bitnami/spark:3.5.5
    container_name: spark
    environment:
      - SPARK_MODE=master
    ports:
      - "4040:4040"
      - "7077:7077"
    networks:
      - pipeline-net

  spark-worker:
    image: bitnami/spark:3.5.5
    container_name: spark-worker
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark:7077
    depends_on:
      - spark
    networks:
      - pipeline-net

  nifi-registry:
    image: apache/nifi-registry:2.3.0
    container_name: nifi-registry
    environment:
      - NIFI_REGISTRY_WEB_HTTP_PORT=18080
      - NIFI_REGISTRY_DB_DIR=/opt/nifi-registry/nifi-registry-current/database
      - NIFI_REGISTRY_FLOW_PROVIDER=file
      - NIFI_REGISTRY_FLOW_STORAGE_DIR=/opt/nifi-registry/nifi-registry-current/flow_storage
    ports:
      - "18080:18080"
    volumes:
      - nifi-registry-db:/opt/nifi-registry/nifi-registry-current/database
      - nifi-registry-flows:/opt/nifi-registry/nifi-registry-current/flow_storage
    networks:
      - pipeline-net
    restart: unless-stopped

  nifi:
    image: my-nifi:2.3.0
    build:
      context: .
      dockerfile: Dockerfile
    container_name: nifi
    environment:
      - NIFI_WEB_HTTPS_PORT=8443
      - SINGLE_USER_CREDENTIALS_USERNAME=admin
      - SINGLE_USER_CREDENTIALS_PASSWORD=adminadmin123
      - NIFI_SECURITY_USER_AUTHORIZER=single-user-authorizer
      - NIFI_SECURITY_USER_LOGIN_IDENTITY_PROVIDER=single-user-provider
      - NIFI_SENSITIVE_PROPS_KEY=your_sensitive_props_key
      - NIFI_ZK_CONNECT_STRING=zookeeper:2181
      - NIFI_CLUSTER_IS_NODE=false
    ports:
      - "8443:8443"
    volumes:
      - nifi-conf:/opt/nifi/nifi-current/conf
      - nifi-state:/opt/nifi/nifi-current/state
      - nifi-database:/opt/nifi/nifi-current/database_repository
      - nifi-flowfile:/opt/nifi/nifi-current/flowfile_repository
      - nifi-content:/opt/nifi/nifi-current/content_repository
      - nifi-provenance:/opt/nifi/nifi-current/provenance_repository
      - nifi-logs:/opt,__nifi/nifi-current/logs
      - ./data/staging:/data/staging
      - ./data/landing:/data/landing
      - ./data/processed:/data/processed
      - ./data/archive:/data/archive
      - ./data/error:/data/error
    depends_on:
      - zookeeper
      - nifi-registry
      - elasticsearch
      - spark
    networks:
      - pipeline-net
    restart: unless-stopped

  spark-service:
    build:
      context: ./spark_service
    container_name: spark-service
    ports:
      - "5001:5001"
      - "4040:4040"
    volumes:
      - ./data/processed:/data/processed
    depends_on:
      - spark
      - nifi
    networks:
      - pipeline-net

volumes:
  elastic-data:
  kibana-data:
  nifi-conf:
  nifi-state:
  nifi-database:
  nifi-flowfile:
  nifi-content:
  nifi-provenance:
  nifi-logs:
  nifi-registry-db:
  nifi-registry-flows:

networks:
  pipeline-net:
    driver: bridge